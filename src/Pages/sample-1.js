// Sample-1: useState
import React, { useState } from 'react';

function Sample1 () {
    const [count, setCount] = useState(0);

    return (
        <div>
            <p>You clicked {count} times</p>
            <button onClick={() => setCount(count + 1)}>Click to increment (useState)</button>
        </div>
    );

}

export default Sample1;

/*
This React component demonstrates the use of the useState hook to manage state in a functional component. The useState hook is used here to create a piece of state named 'count', initialized with a value of 0. A function named 'setCount' is also generated by useState, which is used to update the 'count' state.

The component renders a button and a paragraph. The paragraph displays the current value of 'count', indicating how many times the button has been clicked. When the button is clicked, it triggers an onClick event that calls the 'setCount' function, passing in the current count plus one. This updates the state of 'count', causing the component to re-render and display the new count value in the paragraph.

Expected output upon rendering:
- Initially, the text "You clicked 0 times" is displayed alongside a button labeled "Click to increment (useState)".
- Each click on the button increases the count by 1, updating the displayed text accordingly. For example, after one click, the text changes to "You clicked 1 times", and so on for each subsequent click.
*/